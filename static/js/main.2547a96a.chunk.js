(this.webpackJsonpreactjs=this.webpackJsonpreactjs||[]).push([[0],{36:function(e,t,a){e.exports={link:"contact_link__3j8QJ App_link__4RR_J",divider:"contact_divider__md9AK"}},37:function(e,t,a){e.exports={link:"navLinks_link__24uek App_link__4RR_J"}},47:function(e,t,a){e.exports={h3_alternate:"introduction_h3_alternate__3OIj4",caret:"introduction_caret__3i80b","blink-caret":"introduction_blink-caret__3jUA8"}},55:function(e,t,a){e.exports={hamburger:"hamburgerMenu_hamburger__YNu7E"}},57:function(e,t,a){e.exports={header:"header_header__v9FKw"}},68:function(e,t,a){},76:function(e,t,a){},77:function(e,t,a){"use strict";a.r(t);var n=a(0),o=a.n(n),r=a(11),i=a.n(r),s=(a(68),a(132)),c=a(118),l=a(2);function d(){return Object(l.jsxs)(c.a,{item:!0,id:"about",component:"section",children:[Object(l.jsx)("h2",{children:"About Me"}),Object(l.jsx)("p",{children:"I am a military veteran with 11 years of experience in the Army, I graduated with honors and received a Bachelor of Science in Web Development from Full Sail University where I completed several full-stack web applications during my time as a student.With additional training, I have also been able to hone the skills necessary to effectively use Java along with PostgreSQL, HTML, CSS, and Angular to create large applications that have real-world applications in businesses throughout multiple sectors. I have also learned the skills and tools necessary for working in large groups, along with the planning and coordination that is required to complete a large project."}),Object(l.jsx)("p",{children:"I love learning, and sharing my skills with others is what drives me to continue to learn and teach, it is the biggest reason I have gotten into being a developer. The fact that this job is constantly growing and changing, and the fact that there is just so much to learn makes it an interesting career and hobby."}),Object(l.jsx)("h3",{children:"Interesting Facts About Myself:"}),Object(l.jsxs)("ul",{children:[Object(l.jsx)("li",{children:"I have read the entire 14 books of the Wheel of Time series by Robert Jordan and Brandon Sanderson at least 3 times"}),Object(l.jsx)("li",{children:"This winter was the first time I have ever gone skiing and I have fallen in love with it already"}),Object(l.jsx)("li",{children:"I lived in Thailand for 4 years with my wife and our family where we traveled around visiting most of Thailand"})]})]})}var h=a(121),u=a(36);function b(){return Object(l.jsxs)(c.a,{item:!0,container:!0,direction:"column",spacing:2,id:"contact",component:"footer",children:[Object(l.jsx)(c.a,{item:!0,component:"h2",children:"Contact"}),Object(l.jsxs)(c.a,{item:!0,xs:!0,container:!0,direction:"row",justifyContent:"space-evenly",alignItems:"center",children:[Object(l.jsx)(c.a,{item:!0,children:Object(l.jsx)(h.a,{href:"mailto:jon@jondunlap.com",className:u.link,color:"inherit",underline:"none",children:"Email"})}),Object(l.jsx)(c.a,{item:!0,children:Object(l.jsx)(h.a,{href:"https://github.com/JonDunlap",target:"_blank",rel:"noopener noreferrer",className:u.link,color:"inherit",underline:"none",children:"GitHub"})}),Object(l.jsx)(c.a,{item:!0,children:Object(l.jsx)(h.a,{href:"https://www.linkedin.com/in/jonathandunlap82/",target:"_blank",rel:"noopener noreferrer",className:u.link,color:"inherit",underline:"none",children:"LinkedIn"})}),Object(l.jsx)(c.a,{item:!0,children:Object(l.jsx)(h.a,{href:"https://docs.google.com/document/d/1XqnmUPqJBgUv9MQXONaLWIdv1rjAHPSTc41GBXtENUk/edit?usp=sharing",target:"_blank",rel:"noopener noreferrer",className:u.link,color:"inherit",underline:"none",children:"R\xe9sum\xe9"})})]})]})}var p=a(134),j=a(37);function m(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(h.a,{href:"#about",className:j.link,color:"inherit",underline:"none",children:"About"}),Object(l.jsx)(h.a,{href:"#projects",className:j.link,color:"inherit",underline:"none",children:"Projects"}),Object(l.jsx)(h.a,{href:"#contact",className:j.link,color:"inherit",underline:"none",children:"Contact"}),Object(l.jsx)(h.a,{href:"https://docs.google.com/document/d/1XqnmUPqJBgUv9MQXONaLWIdv1rjAHPSTc41GBXtENUk/edit?usp=sharing",target:"_blank",rel:"noopener noreferrer",className:j.link,color:"inherit",underline:"none",children:"R\xe9sum\xe9"})]})}var g=a(21),x=a(122),f=a(133),v=a(56),O=a.n(v),w=a(55);function y(e){var t=e.children,a=Object(n.useState)(null),o=Object(g.a)(a,2),r=o[0],i=o[1];return Object(l.jsxs)("nav",{children:[Object(l.jsx)(x.a,{"aria-label":"open navigation","aria-controls":"menu-navigation","aria-haspopup":"true",onClick:function(e){i(e.currentTarget)},children:Object(l.jsx)(O.a,{className:w.hamburger,"aria-label":"open drawer",fontSize:"medium"})}),Object(l.jsx)(f.a,{id:"menu-navigation",anchorEl:r,keepMounted:!0,open:Boolean(r),onClose:function(){i(null)},children:t})]})}var k=a(57);function I(){return Object(l.jsxs)(c.a,{component:"header",item:!0,container:!0,direction:"row",justifyContent:"flex-end",alignItems:"center",className:k.header,id:"top-anchor",children:[Object(l.jsx)(p.a,{xsDown:!0,children:Object(l.jsx)(c.a,{component:"nav",container:!0,direction:"row",justifyContent:"flex-end",alignItems:"center",children:Object(l.jsx)(m,{})})}),Object(l.jsx)(p.a,{smUp:!0,children:Object(l.jsx)(y,{children:Object(l.jsx)(m,{})})})]})}var S=a(47);function _(){return Object(l.jsxs)(c.a,{item:!0,container:!0,direction:"column",justifyContent:"flex-start",alignItems:"flex-start",spacing:1,component:"section",children:[Object(l.jsx)(c.a,{item:!0,component:"h1",children:"Hello World!"}),Object(l.jsxs)(c.a,{item:!0,container:!0,children:[Object(l.jsx)(c.a,{item:!0,component:"h2",children:"My Name Is:"}),Object(l.jsxs)(c.a,{item:!0,component:"h2",children:["Jonathan Dunlap",Object(l.jsx)("span",{className:S.caret,children:"|"})]})]}),Object(l.jsx)(c.a,{item:!0,component:"h3",className:S.h3_alternate,children:"Web Developer"})]})}var N=a(123),T=a(126),J=a(125),M=a(124),P=a(79),C=a(135),A=a(127),R=a.p+"static/media/workout-app.a2a8230a.png",q=a.p+"static/media/ers-app.f91929b2.png";function D(){return Object(l.jsxs)(c.a,{item:!0,id:"projects",component:"section",children:[Object(l.jsx)("h2",{children:"Projects"}),Object(l.jsxs)(c.a,{item:!0,container:!0,direction:"row",justifyContent:"space-around",alignItems:"flex-start",spacing:4,children:[Object(l.jsx)(c.a,{item:!0,xs:12,component:"article",children:Object(l.jsxs)(N.a,{children:[Object(l.jsx)(M.a,{component:"img",height:"140",image:q,alt:"Image of employee reimbursement system application code",title:"Image of employee reimbursement system application code"}),Object(l.jsxs)(J.a,{children:[Object(l.jsx)(P.a,{gutterBottom:!0,variant:"h5",component:"h3",children:"Expense Reimbursement System - Java Backend"}),Object(l.jsx)(T.a,{children:Object(l.jsx)(h.a,{variant:"body2","aria-label":"open github page",href:"https://github.com/JonDunlap/Java_ERS_Backend",target:"_blank",rel:"noopener noreferrer",children:"View code on GitHub"})}),Object(l.jsx)(P.a,{variant:"body2",color:"textSecondary",component:"p",children:"The overall goal of this project was to build a better understanding of the fundamentals of software development. Specifically, the purpose was to build an application that is meant to be an expense reimbursement system for employees allowing them to create tickets for reimbursement that will then either be approved or denied by a manager. Some of the technologies and packages that were used for this project were: Maven for project and dependency management, Javalin for creating the REST API along with SLF4J for logging and Jackson for parsing JSON. It also makes use of Docker for the containerization of the PostgreSQL database and uses the JDBC along with the PostgreSQL JDBC Driver to create connections between the Java application and the database. Testing has been added using JUnit and Mockito for testing and mocking unit tests, although no tests are currently implemented I have included these packages so that it can be added at a later time."})]}),Object(l.jsxs)(J.a,{children:[Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Purpose:"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"The Expense Reimbursement System will manage the process of reimbursing employees for expenses incurred while on company time. All employees in the company can login and submit requests for reimbursement and view their past tickets and pending requests. Finance managers can log in and view all reimbursement requests and history for all employees in the company. Finance managers are authorized to approve and deny requests for expense reimbursement. Mandatory Requirements An Employee can: \u2022 Login. \u2022 View the employee home page. \u2022 Submit a reimbursement request. \u2022 View their pending reimbursement requests. \u2022 View their resolved reimbursement requests. A Manager can: \u2022 Login. \u2022 View the manager home page. \u2022 Approve/Deny pending reimbursement requests. \u2022 View all pending requests of all employees. \u2022 View all resolved requests of all employees."}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Roles/Responsibilities:"}),Object(l.jsxs)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:[" ","\u2022 Created PostgreSQL database in a Docker container"]}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"\u2022 Utilized Javalin to create a server for the Java application"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"\u2022 Utilized JDBC to connect the Java application to the database"}),Object(l.jsx)(P.a,{variant:"body2",color:"textSecondary",children:"\u2022 Created a custom registration error handler to give the user an error message if a user already exists with the same email during registration"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"\u2022 Used method overloading to handle retrieving either all user tickets, or tickets with a specific status if a query parameter is used"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Issues:"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"Overall, there are very few issues with this application, currently this only includes the backend API for this application and can only be accessed using a tool like Postman. There is currently an issue if a user makes a PUT/POST request without a body it is causing an exception due to Jackson databind not being able to handle a null body being sent, this is something I would like to research and eventually fix."})]}),Object(l.jsx)(A.a,{variant:"middle"}),Object(l.jsxs)(J.a,{children:[Object(l.jsx)(P.a,{variant:"body2",children:"Technologies:"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Javalin"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Java"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Maven"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"JDBC"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"PostgreSQL"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Docker"})]})]})}),Object(l.jsx)(c.a,{item:!0,xs:12,component:"article",children:Object(l.jsxs)(N.a,{children:[Object(l.jsx)(M.a,{component:"img",height:"140",image:R,alt:"Image of workout application website",title:"Image of workout application website"}),Object(l.jsxs)(J.a,{children:[Object(l.jsxs)(P.a,{gutterBottom:!0,variant:"h5",component:"h3",children:["Workout Buddy - A MERN Stack Tutorial from"," ",Object(l.jsx)("a",{href:"https://www.youtube.com/c/TheNetNinja",target:"_blank",rel:"noopener noreferrer",children:"Net Ninja"})]}),Object(l.jsxs)(T.a,{children:[Object(l.jsx)(h.a,{variant:"body2","aria-label":"open github page",href:"https://github.com/JonDunlap/Net-Ninja-MERN-Stack-Tutorial",target:"_blank",rel:"noopener noreferrer",children:"View code on GitHub"}),Object(l.jsx)(P.a,{variant:"body2",color:"textSecondary",component:"p",children:"|"}),Object(l.jsx)(h.a,{variant:"body2","aria-label":"open workoutapp.jondunlap.com website",href:"https://workoutapp.jondunlap.com",target:"_blank",rel:"noopener noreferrer",children:"View live demo"})]}),Object(l.jsx)(P.a,{variant:"body2",color:"textSecondary",component:"p",children:"A simple MERN application that allows a user to add and remove workouts, with authentication and routes for individual users to create their own workouts. The backend makes use of Mongoose to talk to the MongoDB database as well as to authenticate that all data being passed to the controllers is valid, if it is not valid, an error will be presented to the user as well as using CSS to highlight the required fields. On the frontend it makes use of React useContext to interact with the API depending on the context that is passed to the reducer and carrying out the necessary request and then updating the state. The application makes use of JSON web tokens (JWT) as well as making use of the browsers local storage to authenticate and store the user data for their current session. I also wanted to learn more about actually hosting a MERN application and to the end the application is hosted online using Google Cloud Platform's compute engine VM. A demo is available by clicking the web icon below."})]}),Object(l.jsxs)(J.a,{children:[Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Purpose:"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"This application was a chance for me to learn more about the MERN stack and how to implement it in my own projects as well as the steps necessary to actually host a web application. This presented me with a chance to learn how to deploy web applications using an actual web server rather than the hosting platforms that I have used previously, such as Heroku and GitHub Pages. This was my first time using NGINX and I was also able to learn how to use the Google Cloud Platform compute engine to host the application on an Ubuntu VM. The application itself is a simple workout tracker that allows users to input a workout as well as view and delete their previous workouts and I was able to implement authentication on the routes to protect the application and the data from unauthorized access."}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Outcome:"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"Making use of Mongoose as the ODM, I was able to make a backend API that works with MongoDB's Cloud Atlas platform allowing users to create, read, update, and delete workouts with validation and error handling. On the frontend I was able to make use of React's Context, Reducer, and Effect hooks to handle the API calls and the state of the application. For the server I created an Ubuntu VM using the Google Compute Engine and was able to use NGINX as the reverse proxy to serve the application. I also setup and used a private key for connecting to the server as well as removing the root account and the ability to connect using a password so that the server could be more secure. Making use of an SSL certificate that I had available I was able to register and use a subdomain on my current website and make the website use HTTPS for a more secure connection. This was a good tutorial and I was able to take it further by actually deploying the application and making it publicly available."}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",children:"Issues:"}),Object(l.jsx)(P.a,{paragraph:!0,variant:"body2",color:"textSecondary",children:"I need to look into how to better implement my routes in NGINX since I am having an issue forwarding HTTP requests to the HTTPS port."})]}),Object(l.jsx)(A.a,{variant:"middle"}),Object(l.jsxs)(J.a,{children:[Object(l.jsx)(P.a,{variant:"body2",children:"Technologies:"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"MongoDB"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Mongoose ODM"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Express"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"React"}),Object(l.jsx)(C.a,{variant:"outlined",size:"small",label:"Node.js"})]})]})})]})]})}var B=a(128),E=a(131),z=a(130),U=a(129),L=a(58),H=a.n(L),V=Object(B.a)((function(e){return{root:{position:"fixed",bottom:e.spacing(2),right:e.spacing(2),backgroundColor:"inherit"},icon:{backgroundColor:"green",color:"#fff","&:hover":{color:"#000"}}}}));function G(){var e=V(),t=Object(U.a)({disableHysteresis:!0,threshold:100});return Object(l.jsx)(z.a,{in:t,children:Object(l.jsx)("div",{onClick:function(e){var t=document.querySelector("#top-anchor");t&&t.scrollIntoView({behavior:"smooth",block:"center"})},role:"presentation",className:e.root,children:Object(l.jsx)(E.a,{className:e.icon,size:"small","aria-label":"scroll back to top",children:Object(l.jsx)(H.a,{})})})})}a(76);function F(){return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)(s.a,{children:Object(l.jsxs)(c.a,{container:!0,direction:"column",spacing:4,children:[Object(l.jsx)(I,{}),Object(l.jsxs)(c.a,{item:!0,container:!0,component:"main",spacing:4,children:[Object(l.jsx)(_,{}),Object(l.jsx)(d,{}),Object(l.jsx)(D,{})]}),Object(l.jsx)(b,{})]})}),Object(l.jsx)(G,{})]})}i.a.render(Object(l.jsx)(o.a.StrictMode,{children:Object(l.jsx)(F,{})}),document.getElementById("root"))}},[[77,1,2]]]);
//# sourceMappingURL=main.2547a96a.chunk.js.map